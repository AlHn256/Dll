<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AlfaPribor.Logs</name>
    </assembly>
    <members>
        <member name="T:AlfaPribor.Logs.IDebugLogger">
            <summary>Интерфейс ведения журнала регистрации отладочных сообщений</summary>
        </member>
        <member name="M:AlfaPribor.Logs.IDebugLogger.DebugPrint(System.String)">
            <summary>Записывает отладочное сообщение в журнал</summary>
            <param name="message">Ссылка на строку с отладочным сообщеним</param>
            <remarks>Метод должен перехватывать любые исключения, возникающие в нем</remarks>
        </member>
        <member name="M:AlfaPribor.Logs.IDebugLogger.DebugPrint(System.String,System.Boolean)">
            <summary>
            Записывает отладочное сообщение в журнал
            </summary>
            <param name="message">Сообщение для вывода</param>
            <param name="printTimeMetric">Ставить ли метку времени при выводе сообщений</param>
        </member>
        <member name="P:AlfaPribor.Logs.IDebugLogger.MarkMessages">
            <summary>Признак выполнения маркировки сообщений, помещаемых в журнал</summary>
        </member>
        <member name="P:AlfaPribor.Logs.IDebugLogger.MarkerFormat">
            <summary>Строка форматирования даты/времени, которыми маркируются сообщения, помещаемые в журнал</summary>
        </member>
        <member name="P:AlfaPribor.Logs.IDebugLogger.Encoding">
            <summary>Определяет кодировку, в которой будут записываться сообщения в журнал регистрации</summary>
        </member>
        <member name="T:AlfaPribor.Logs.MessageType">
            <summary>Тип сообщения</summary>
        </member>
        <member name="F:AlfaPribor.Logs.MessageType.Unknown">
            <summary>Тип сообщения не определен</summary>
        </member>
        <member name="F:AlfaPribor.Logs.MessageType.Information">
            <summary>Информационное сообщение</summary>
        </member>
        <member name="F:AlfaPribor.Logs.MessageType.Warning">
            <summary>Сообщение, требующее особого внимания; предупреждение</summary>
        </member>
        <member name="F:AlfaPribor.Logs.MessageType.Error">
            <summary>Сообщение об ошибке</summary>
        </member>
        <member name="T:AlfaPribor.Logs.ITypedDebugLogger">
            <summary>Интерфейс ведения журнала отладочных сообщений, различающихся по типам</summary>
        </member>
        <member name="M:AlfaPribor.Logs.ITypedDebugLogger.DebugPrint(System.String,AlfaPribor.Logs.MessageType)">
            <summary>Записывает отладочное сообщение в журнал</summary>
            <param name="message">Ссылка на строку с отладочным сообщеним</param>
            <param name="type">Тип сообщения</param>
            <remarks>Метод должен перехватывать любые исключения, возникающие в нем</remarks>
        </member>
        <member name="M:AlfaPribor.Logs.ITypedDebugLogger.DebugPrint(System.String,AlfaPribor.Logs.MessageType,System.Boolean)">
            <summary>
            Записывает отладочное сообщение в журнал
            </summary>
            <param name="message">Записываемое сообщение</param>
            <param name="type">Тип сообщения</param>
            <param name="printTimeMetric">выводить ли метку времени</param>
        </member>
        <member name="T:AlfaPribor.Logs.LazyLog">
            <summary>
            Ленивый логгер. Создаёт файл только в момент записи в него. В противном случае просто не активен.
            </summary>
        </member>
        <member name="F:AlfaPribor.Logs.LazyLog._max_files_size">
            <summary>Ограничение максимального размера логов</summary>
        </member>
        <member name="F:AlfaPribor.Logs.LazyLog._logCheckObject">
            <summary>Для потокобезопасности</summary>
        </member>
        <member name="F:AlfaPribor.Logs.LazyLog._innerLog">
            <summary>Объект лога</summary>
        </member>
        <member name="F:AlfaPribor.Logs.LazyLog._directoryPath">
            <summary>Путь к каталогу лога </summary>
        </member>
        <member name="F:AlfaPribor.Logs.LazyLog._isInitDirectory">
            <summary>Флаг инициализации директории</summary>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.#ctor(System.String,System.Int32,System.String)">
            <summary>Конструктор класса </summary>
            <param name="file"></param>
            <param name="maxlength"></param>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>Конструктор класса </summary>
            <param name="file"></param>
            <param name="max_length"></param>
            <param name="days_length"></param>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Конструктор класса</summary>
            <param name="file"></param>
            <param name="max_length"></param>
            <param name="days_length"></param>
            <param name="max_size"></param>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.CheckLogObject">
            <summary>Проверка на наличие файла лога </summary>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.Write(System.String)">
            <summary>Запись в файл</summary>
            <param name="data"></param>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.Write(System.String,System.DateTime@)">
            <summary>Запись в файл лога</summary>
            <param name="data"></param>
            <param name="dt"></param>
        </member>
        <member name="M:AlfaPribor.Logs.LazyLog.DirSize(System.IO.DirectoryInfo)">
            <summary>Определение размера директорий</summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:AlfaPribor.Logs.Log">
            <summary>Класс ведения лога с ротацией файлов</summary>
        </member>
        <member name="F:AlfaPribor.Logs.Log.max_files_size">
            <summary>Ограничение максимального размера логов</summary>
        </member>
        <member name="M:AlfaPribor.Logs.Log.#ctor(System.String,System.Int32)">
            <summary>Конструктор лога с ротацией 10 файлов</summary>
            <param name="file">Имя лог файла</param>
            <param name="maxlength">Максимальный размер файла</param>
        </member>
        <member name="M:AlfaPribor.Logs.Log.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Конструктор лога с ротацией по длительности хранения файлов</summary>
            <param name="file">Имя лог файла</param>
            <param name="max_length">Максимальный размер файла</param>
            <param name="days_length">Длительность хранения в днях</param>
        </member>
        <member name="M:AlfaPribor.Logs.Log.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Конструктор лога с ротацией по длительности хранения файлов</summary>
            <param name="file">Имя лог файла</param>
            <param name="max_length">Максимальный размер файла</param>
            <param name="days_length">Длительность хранения в днях</param>
            <param name="max_size">Максимальный размер</param>
        </member>
        <member name="M:AlfaPribor.Logs.Log.Write(System.String)">
            <summary>Сохранение строки в лог файл</summary>
            <param name="data"></param>
        </member>
        <member name="M:AlfaPribor.Logs.Log.Write(System.String,System.DateTime@)">
            <summary>Сохранение строки в лог файл</summary>
            <param name="data"></param>
            <param name="dt">Возвращаемое время записи события</param>
        </member>
        <member name="M:AlfaPribor.Logs.Log.RotateLog(System.String)">
            <summary>Ротация лог-файлов</summary>
            <param name="file_name">Имя файла</param>
        </member>
        <member name="T:AlfaPribor.Logs.RotateFileLogger">
            <summary>Позволяет вести журнал регистрации отладочных сообщений, размер которого имеет регулируемое значение</summary>
            <remarks>
            Принцип организации журнала регистрации:
            =======================================
            считаем, что журнал регистрации будет состоять из PartsCount частей, каждая часть
            которого имеет размер не более PartSize байт. Физически журнал будет представлять собой
            группу файлов с именами:
            FileName - главный файл журнала, содержащий наиболее актуальную (по времени занесения в журнал) информацию;
            FileName + "." + N - оставшиеся части журнала, где N меньше PartsCount. Чем больше число N
            в имене файла, тем более старую информацию он содержит.
            Т.о. общий размер журнала регистрации будет меньше или равен PartsCount * PartSize байтам.
            ____________________
            Чтобы осуществлялась запись в журнал регистрации, главный файл журнал регистрации отладочных сообщений
            должен существовать.
            
            !!! Все свойства и методы класса являются потокобезопасными !!!
            
            </remarks>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._FileName">
            <summary>Имя файла, представляющего журнал регистрации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._FileExtension">
            <summary>Расширение файла журнала регистрации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._MarkMessages">
            <summary>Признак маркировки сообщений, помещаемых в журнал регистрации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._MarkerFormat">
            <summary>Строка форматирования даты/времени, которыми маркируются сообщения, помещаемые в журнал</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._PartSize">
            <summary>Максимальный размер каждой части журнала регистрации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._PartsCount">
            <summary>Количество частей журнала регистации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._Encoding">
            <summary>Определяет кодировку, в которой будет записываться сообщение в журнал регистрации</summary>
        </member>
        <member name="F:AlfaPribor.Logs.RotateFileLogger._AutoCreate">
            <summary>Признак автоматического создания файла журнала в случае его отсутствия</summary>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.#ctor(System.Int64,System.Int64,System.String)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="marker_format">Строка форматирования даты/времени, которыми должны маркироваться сообщения, помещаемые в журнал</param>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.#ctor(System.Int64,System.Int64,System.Text.Encoding)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="encoding">Определяет кодировку, в которой будет записываться сообщение в журнал регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.#ctor(System.Int64,System.Int64,System.String,System.Text.Encoding)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="marker_format">Строка форматирования даты/времени, которыми должны маркироваться сообщения, помещаемые в журнал</param>
            <param name="encoding">Определяет кодировку, в которой будет записываться сообщение в журнал регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.#ctor(System.Int64,System.Int64)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.RotateLog">
            <summary>Ротация файлов журнала регистрации</summary>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.FileName">
            <summary>Имя файла, представляющего журнал регистрации</summary>
            <remarks>Имя файла может содержать аблолютный или относительный путь к нему</remarks>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.AutoCreate">
            <summary>Признак автоматического создания файла журнала сообщений в случае его отсутствия.
            Если равено FALSE - запись в файл будет осуществлятся только при его наличии.
            </summary>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.PartsCount">
            <summary>Количество частей журнала регистации</summary>
            <remarks>
            Журнал регистрации разбивается на несколько частей для того, чтобы было легче
            удалять устаревшие сообщения из журнала, обеспечивая т.о. постоянное хранение
            только актуальной информации.
            </remarks>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.PartSize">
            <summary>Максимальный размер каждой части журнала регистрации (байт)</summary>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.Encoding">
            <summary>Определяет кодировку, в которой будет записываться сообщение в журнал регистрации
            <para>По умолчанию принимает значение текущей кодировки, определенной в операционной системе</para>
            </summary>
        </member>
        <member name="M:AlfaPribor.Logs.RotateFileLogger.DebugPrint(System.String)">
            <summary cref="M:AlfaPribor.Logs.IDebugLogger.DebugPrint(System.String)">Реализация интерфейса IDebugLogger</summary>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.MarkMessages">
            <summary cref="P:AlfaPribor.Logs.IDebugLogger.MarkMessages">Реализация интерфейса IDebugLogger
            <para>По умолчанию принимает значение TRUE</para>
            </summary>
        </member>
        <member name="P:AlfaPribor.Logs.RotateFileLogger.MarkerFormat">
            <summary cref="P:AlfaPribor.Logs.IDebugLogger.MarkerFormat">Реализация интерфейса IDebugLogger
            <para>По умолчанию принимает значение "HH:mm:ss:fff "</para>
            </summary>
        </member>
        <member name="E:AlfaPribor.Logs.RotateFileLogger.OnDebugPrint">
            <summary>Событие "Отладочная печать"</summary>
        </member>
        <member name="T:AlfaPribor.Logs.EventOnDebugPrintArgs">
            <summary>Класс с дополнительной информацией о событии "Отладочная печать"</summary>
        </member>
        <member name="F:AlfaPribor.Logs.EventOnDebugPrintArgs._Message">
            <summary>Текст сообщения</summary>
        </member>
        <member name="M:AlfaPribor.Logs.EventOnDebugPrintArgs.#ctor(System.String)">
            <summary>Конструктор класса</summary>
            <param name="msg">Текст сообщения</param>
        </member>
        <member name="P:AlfaPribor.Logs.EventOnDebugPrintArgs.Message">
            <summary>Текст сообщения</summary>
        </member>
        <member name="T:AlfaPribor.Logs.EvOnDebugPrintHandler">
            <summary>Делегат обработчика события "Отладочная печать"</summary>
            <param name="sender">Объект, породивший событие</param>
            <param name="args">Дополнительные сведения о событии</param>
        </member>
        <member name="T:AlfaPribor.Logs.TypedRotateFileLog">
            <summary>
            Позволяет вести журнал регистрации отладочных сообщений, размер которого имеет регулируемое значение.
            Сообщения различаются по типу.
            </summary>
            <remarks>
            !!! Все свойства и методы класса являются потокобезопасными !!!
            </remarks>
        </member>
        <member name="M:AlfaPribor.Logs.TypedRotateFileLog.#ctor(System.Int64,System.Int64,System.String)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="marker_format">Строка форматирования даты/времени, которыми должны маркироваться сообщения, помещаемые в журнал</param>
        </member>
        <member name="M:AlfaPribor.Logs.TypedRotateFileLog.#ctor(System.Int64,System.Int64,System.Text.Encoding)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="encoding">Определяет кодировку, в которой будет записываться сообщение в журнал регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.TypedRotateFileLog.#ctor(System.Int64,System.Int64,System.String,System.Text.Encoding)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
            <param name="marker_format">Строка форматирования даты/времени, которыми должны маркироваться сообщения, помещаемые в журнал</param>
            <param name="encoding">Определяет кодировку, в которой будет записываться сообщение в журнал регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.TypedRotateFileLog.#ctor(System.Int64,System.Int64)">
            <summary>Конструктор класса</summary>
            <param name="parts_count">Количество частей (файлов), на которые будет делиться журнал регистрации</param>
            <param name="part_size">Максимальная длина в байтах каждого файла (части) журнала регистрации</param>
        </member>
        <member name="M:AlfaPribor.Logs.TypedRotateFileLog.DebugPrint(System.String,AlfaPribor.Logs.MessageType)">
            <summary cref="M:AlfaPribor.Logs.ITypedDebugLogger.DebugPrint(System.String,AlfaPribor.Logs.MessageType)">Записывает отладочное сообщение в журнал</summary>
            <param name="message">Ссылка на строку с отладочным сообщеним</param>
            <param name="type">Тип сообщения</param>
        </member>
    </members>
</doc>
